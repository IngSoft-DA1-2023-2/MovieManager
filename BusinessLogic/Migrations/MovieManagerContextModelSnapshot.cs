// <auto-generated />
using BusinessLogic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessLogic.Migrations
{
    [DbContext(typeof(MovieManagerContext))]
    partial class MovieManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryMovie", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("CategoryMovie");
                });

            modelBuilder.Entity("Domain.Actor", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Name = "Leonardo",
                            Age = 50,
                            LastName = "Di Caprio"
                        });
                });

            modelBuilder.Entity("Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Frank Drabont",
                            ReleaseYear = 1994,
                            Title = "The Shwanshank"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Francis Coppola",
                            ReleaseYear = 1972,
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Francis Coppola",
                            ReleaseYear = 1974,
                            Title = "The Godfather 2"
                        },
                        new
                        {
                            Id = 4,
                            Director = "Christopher Nolan",
                            ReleaseYear = 2008,
                            Title = "The Dark Knight"
                        },
                        new
                        {
                            Id = 5,
                            Director = "Peter Jackson",
                            ReleaseYear = 2003,
                            Title = "The Lord of the Rings"
                        },
                        new
                        {
                            Id = 6,
                            Director = "Quentin Tarantino",
                            ReleaseYear = 1994,
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 7,
                            Director = "Steven Spielberg",
                            ReleaseYear = 1993,
                            Title = "Schindler's List"
                        });
                });

            modelBuilder.Entity("CategoryMovie", b =>
                {
                    b.HasOne("Domain.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
